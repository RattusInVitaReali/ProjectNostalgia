[gd_scene load_steps=5 format=3 uid="uid://bhb27i5emluxi"]

[ext_resource type="Script" path="res://level_generator/LevelGenerator.cs" id="1_v37ya"]

[sub_resource type="NavigationMesh" id="NavigationMesh_j0o7p"]

[sub_resource type="Shader" id="Shader_q4bp4"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.1.2.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform vec4 grass_color : source_color = vec4(0.3, 1.0, 0.3, 1.0);
uniform vec4 rock_color : source_color = vec4(0.1, 0.1, 0.1, 1.0);

varying flat vec3 out_color;

float noise(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453) / 10.0 - 0.05;
}


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	float t = (VERTEX.y + 15.0) / 20.0;
	float rr = grass_color.r + (rock_color.r - grass_color.r) * t + noise(vec2(VERTEX.x, VERTEX.z));
	float gg = grass_color.g + (rock_color.g - grass_color.g) * t + noise(vec2(VERTEX.x, VERTEX.z));
	float bb = grass_color.b + (rock_color.b - grass_color.b) * t + noise(vec2(VERTEX.x, VERTEX.z));
	out_color = vec3(rr, gg, bb);
}


void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = out_color * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_sy6cd"]
render_priority = 0
shader = SubResource("Shader_q4bp4")
shader_parameter/albedo = Color(0.258824, 0.686275, 0.396078, 1)
shader_parameter/point_size = 0.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/grass_color = Color(0, 0.713726, 0.0705882, 1)
shader_parameter/rock_color = Color(0.568627, 0.631373, 0, 1)

[node name="LevelGenerator" type="Node3D"]
script = ExtResource("1_v37ya")

[node name="Rooms" type="Node3D" parent="."]

[node name="NavigationRegion3D" type="NavigationRegion3D" parent="."]
navigation_mesh = SubResource("NavigationMesh_j0o7p")

[node name="MeshInstance3D" type="MeshInstance3D" parent="NavigationRegion3D"]
layers = 786433
material_override = SubResource("ShaderMaterial_sy6cd")
skeleton = NodePath("../..")

[node name="RayCast3D" type="RayCast3D" parent="."]
target_position = Vector3(0, -50, 0)
debug_shape_thickness = 5

[node name="MultiMeshInstance3D" type="MultiMeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
